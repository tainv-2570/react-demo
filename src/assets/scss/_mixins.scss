@mixin flex($direction: row, $content: null, $items: null, $wrap: null) {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  @include flex-direction($direction);
  @include justify-content($content);
  @include align-items($items);
  @include flex-wrap($wrap);
}

@mixin flex-direction($direction) {
  @if $direction==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  } @else if $direction==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  } @else if $direction==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }

  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

@mixin justify-content($content) {
  @if $content==flex-start {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
  } @else if $content==flex-end {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
  } @else if $content==space-between {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $content==space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $content;
    -moz-box-pack: $content;
    -ms-flex-pack: $content;
  }

  -webkit-justify-content: $content;
  justify-content: $content;
}

@mixin align-items($items) {
  @if $items==flex-start {
    -webkit-box-align: start;
    -moz-box-align: start;
    -ms-flex-align: start;
  } @else if $items==flex-end {
    -webkit-box-align: end;
    -moz-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $items;
    -moz-box-align: $items;
    -ms-flex-align: $items;
  }

  -webkit-align-items: $items;
  align-items: $items;
}

@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;

  @if $wrap==nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $wrap;
  }

  flex-wrap: $wrap;
}

@mixin flex-basis($basis: auto) {
  -webkit-flex-basis: $basis;
  flex-basis: $basis;
}

@mixin flex-grow($int: 1) {
  -webkit-box-flex: $int;
  -moz-box-flex: $int;
  -webkit-flex-grow: $int;
  -ms-flex: $int;
  flex-grow: $int;
}

@mixin box($width, $height: $width) {
  display: inline-block;
  box-sizing: border-box;
  width: $width;
  height: $height;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    @content
  }
  &::-moz-placeholder {
    /* Firefox 19+ */
    @content

  }
  &:-ms-input-placeholder {
    /* IE 10+ */
    @content

  }
  &:-moz-placeholder {
    /* Firefox 18- */
    @content
  }
}

@mixin align-center {
  margin-right: auto;
  margin-left: auto;
}

@mixin media-query($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type==max {
      $width: $width - 1px;
    }

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}
